# -*- coding: utf-8 -*-
"""COVID19 INDIA Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_CuSI0JwYI5yrosbEGQEVm_J2Fot3S9v
"""

import requests
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

india_json_data=requests.get('https://raw.githubusercontent.com/swati23/covid-19-/master/india_statewise.json?token=ACOIWIZFP3N3ZDQVHYTN4UC6TFFXA').json()

india_json_data

df_india=pd.io.json.json_normalize(india_json_data['data']['statewise'])

df_india.set_index('state')

location = {
    "Sikkim": [27.5330,88.5122],
    "Maharashtra" : [19.7515,75.7139],
    "West Bengal": [22.9868,87.8550],
    "Chandigarh":[30.7333,76.7794],
    "Karnataka": [15.3173,75.7139],
    "Telangana": [18.1124,79.0193],
    "Uttar Pradesh": [26.8467,80.9462],
    "Gujarat":[22.2587,71.1924],
     "Odisha":[20.9517,85.0985],
    "Delhi" : [28.7041,77.1025],
    "Tamil Nadu": [11.1271,78.6569],
    "Haryana": [29.0588,76.0856],
    "Madhya Pradesh":[22.9734,78.6569],
    "Kerala" : [10.8505,76.2711],
    "Rajasthan": [27.0238,74.2179],
    "Jammu and Kashmir":[33.7782,76.5762],
    "Ladakh": [34.1526,77.5770],
    "Andhra Pradesh":[15.9129,79.7400],
    "Bihar": [25.0961,85.3131],
    "Chhattisgarh":[21.2787,81.8661],
    "Uttarakhand":[30.0668,79.0193],
    "Himachal Pradesh":[31.1048,77.1734],
    "Goa": [15.2993,74.1240],
    "Tripura":[23.9408,91.9882],  
    "Andaman and Nicobar Islands": [11.7401,92.6586],
    "Puducherry":[11.9416,79.8083],
    "Manipur":[24.6637,93.9063],
    "Mizoram":[23.1645,92.9376],
    "Assam":[26.2006,92.9376],
    "Meghalaya":[25.4670,91.3662],   
    "Arunachal Pradesh":[28.2180,94.7278],
    "Jharkhand" : [23.6102,85.2799],
    "Nagaland": [26.1584,94.5624],
    "Punjab":[31.1471,75.3412], 
    "Dadra and Nagar Haveli":[20.1809,73.0169],
    "Lakshadweep":[10.5667,72.6417],
    "Daman and Diu":[20.4283,72.8397]  
}

df_india = df_india.set_index('state')

df_india.index

import folium

df_india

df_india['Lat'] = ""
df_india['Long'] = ""

for index in df_india.index:
    df_india.loc[df_india.index == index, "Lat"] = location[index][0]
    df_india.loc[df_india.index == index, "Long"] = location[index][1]

df_india

import folium
import numpy as np
india_map = folium.Map(location=[9,85], zoom_start= 4, max_zoom=6, height= 1000, width='100%')

for i in range(0, len(df_india[df_india['confirmed']>0].index)):
    folium.Circle(
        location=[df_india.iloc[i]['Lat'], df_india.iloc[i]['Long']],
        radius=(int(np.log2(df_india.iloc[i]['confirmed']+1.0001)))*15000,
        fill=True).add_to(india_map)
india_map

import folium
import numpy as np
india_map = folium.Map(location=[9,85], zoom_start= 4, max_zoom=6, height= 1000, width='100%')

for i in range(0, len(df_india[df_india['confirmed']>0].index)):
    folium.Circle(
        location=[df_india.iloc[i]['Lat'], df_india.iloc[i]['Long']],
        radius=(int(np.log2(df_india.iloc[i]['confirmed']+1.0001)))*15000,
        tooltip = "<h5 style='text-align:center;font-weight: bold'>"+df_india.iloc[i].name+"</h5>"+
                    "<hr style='margin:10px;'>"+
                    "<ul style='color: #444;list-style-type:circle;align-item:left;padding-left:20px;padding-right:20px'>"+
        "<li>Confirmed: "+str(df_india.iloc[i]['confirmed'])+"</li>"+
        "<li>Active:   "+str(df_india.iloc[i]['active'])+"</li>"+
        "<li>Recovered:   "+str(df_india.iloc[i]['recovered'])+"</li>"+
        "<li>Deaths:   "+str(df_india.iloc[i]['deaths'])+"</li>"+
        "</ul>",
        fill=True).add_to(india_map)
india_map

df_india['Mortality Rate(per 100)']= (df_india['deaths']/df_india['confirmed'])*100

df_india

group_size = [sum(df_india['confirmed']),   
              sum(df_india['recovered']),
              sum(df_india['deaths'])]
group_labels = ['confirmed\n' + str(sum(df_india['confirmed'])),
                'recovered\n' + str(sum(df_india['recovered'])),              
                'deaths\n' + str(sum(df_india['deaths']))]
custom_colors = ['skyblue','yellowgreen','tomato']
plt.figure(figsize = (5,5))
plt.pie(group_size, labels = group_labels, colors = custom_colors)
central_circle = plt.Circle((0,0), 0.5, color = 'white')
fig = plt.gcf()
fig.gca().add_artist(central_circle)
plt.rc('font', size = 12)
plt.title('Nationwide total Confirmed, Recovered and Deaths Cases', fontsize = 20)
plt.show()

import requests
from bs4 import BeautifulSoup
from prettytable import PrettyTable

!pip install geopandas

import geopandas as gpd

!pip install descartes

shapefile = gpd.read_file("/content/Indian_States.shp")
shapefile.head()

shapefile.rename(columns = {'st_nm':'state'}, inplace = True)
shapefile

shapefile['state'] = shapefile['state'].str.replace('&','and')
shapefile['state'].replace('Arunanchal Pradesh',
                              'Arunachal Pradesh', inplace = True)
shapefile['state'].replace('Telangana', 
                              'Telengana', inplace = True)
shapefile['state'].replace('NCT of Delhi', 
                              'Delhi', inplace = True)
shapefile['state'].replace('Andaman and Nicobar Island', 
                              'Andaman and Nicobar Islands', 
                               inplace = True)

merged_data = pd.merge(shapefile,df_india, 
                       how = 'left', on = 'state')
merged_data.fillna(0, inplace = True)
merged_data.head()

fig, ax = plt.subplots(1, figsize=(15, 10))
ax.axis('off')
ax.set_title("INDIA State wise Report of COVID19- confirmed cases")
merged_data.plot(column = 'confirmed', cmap='YlOrRd', 
                 linewidth=0.8, ax=ax, edgecolor='0.8', 
                 legend = True)
plt.show()

